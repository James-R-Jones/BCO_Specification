{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://biocomputeobject.org/schemas/biocomputeobject.json",
  "type": "object",
  "title": "Base type for all BioCompute Object types",
  "description": "All BioCompute object types must inherit from this type in order to be compliant with BioCompute framework",
  "required": [
    "bco_id",
    "type",
    "digital_signature",
    "bco_spec_version",
    "provenance_domain"
  ],
  "definitions": {
    "bco_id": {
      "type": "string",
      "description": "A unique identifier that should be applied to each BCO instance, generated and assigned by a BCO database engine. IDs should never be reused",
      "examples": [
        "https://github.com/biocompute-objects/BCO_Spec_V1.2/blob/master/HCV1a.json"
      ]
    }
  },
  "properties": {
    "bco_id": {
      "$ref": "#/definitions/bco_id",
      "readOnly": true
    },
    "type": {
      "type": "string",
      "description": "TODO",
      "examples": [
        "antiviral_resistance_detection"
      ],
      "readOnly": true
    },
    "digital_signature": {
      "type": "string",
      "description": "Digital signature of BioCompute Object by Authority",
      "examples": [
        "905d7fce3f3ac64c8ea86f058ca71658"
      ],
      "readOnly": true,
      "pattern": "^([A-Za-z0-9]+)$"
    },
    "bco_spec_version": {
      "type": "string",
      "description": "Version of the BCO specification used to define this document",
      "examples": [
        "v1.2"
      ],
      "readOnly": true
    },
    "provenance_domain": {
      "$ref": "provenance_domain.json"
    },
    "usability_domain": {
      "$ref": "usability_domain.json"
    },
    "extension_domain": {
      "properties": {
        "fhir_extension": {
          "type": "array",
          "items": {
            "$ref": "extension_domain/fhir_extension.json"
          }
        },
        "github_extension": {
          "$ref": "extension_domain/github_extension.json"
        }
      }
    },
    "description_domain": {
      "$ref": "description_domain.json"
    },
    "execution_domain": {
      "$comment": "execution_domain.json",
      "type": "object"
    },
    "parametric_domain": {
      "$ref": "parametric_domain.json"
    },
    "io_domain": {
      "$ref": "io_domain.json"
    },
    "error_domain": {
      "$ref": "error_domain.json"
    }
  }
}
