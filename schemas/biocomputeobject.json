{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://biocomputeobject.org/schemas/biocomputeobject.json",
  "type": "object",
  "title": "Base type for all BioCompute Object types",
  "description": "All BioCompute object types must inherit from this type in order to be compliant with BioCompute framework",
  "required": [
    "bco_id",
    "type",
    "digital_signature",
    "bco_spec_version",
    "provenance_domain"
  ],
  "definitions": {
    "bco_id": {
      "type": "string",
      "description": "A unique identifier that should be applied to each BCO instance, generated and assigned by a BCO database engine. IDs should never be reused",
      "examples": [
        "https://github.com/biocompute-objects/BCO_Spec_V1.2/blob/master/HCV1a.json"
      ]
    },
    "inherited": {
      "$comment": "FIXME: how should schema(s) handle inherited types?",
      "type": "object",
      "description": "all fields in this domain are BioCompute specific and should be defined in inherited BioCompute type"
    },
    "uri": {
      "$comment": "https://github.com/biocompute-objects/BCO_Specification/blob/1935b9c2765a3d00e44e338ead5b637a5b20b648/primitives.json#L41-L56",
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "format": "uri"
        },
        "access_time": {
          "type": "string",
          "format": "date-time"
        },
        "sha1_chksum": {
          "$comment": "TODO: recommend definining 'sha1_chksum' as sha256 or any hash function",
          "type": "string",
          "pattern": "[A-Za-z0-9]+"
        }
      }
    }
  },
  "properties": {
    "bco_id": {
      "$ref": "#/definitions/bco_id",
      "readOnly": true
    },
    "type": {
      "type": "string",
      "description": "TODO",
      "examples": [
        "antiviral_resistance_detection"
      ],
      "readOnly": true
    },
    "digital_signature": {
      "type": "string",
      "description": "Digital signature of BioCompute Object by Authority",
      "examples": [
        "905d7fce3f3ac64c8ea86f058ca71658"
      ],
      "readOnly": true,
      "pattern": "^([A-Za-z0-9]+)$"
    },
    "bco_spec_version": {
      "type": "string",
      "description": "Version of the BCO specification used to define this document",
      "examples": [
        "v1.2"
      ],
      "readOnly": true
    },
    "provenance_domain": {
      "$ref": "provenance_domain.json"
    },
    "usability_domain": {
      "$ref": "usability_domain.json"
    },
    "extension_domain": {
      "$comment": "FIXME: how should schema(s) handle inherited types?",
      "properties": {
        "fhir_extension": {
          "type": "array",
          "items": {
            "$ref": "extension_domain/fhir_extension.json"
          }
        },
        "github_extension": {
          "$ref": "extension_domain/github_extension.json"
        }
      }
    },
    "description_domain": {
      "$ref": "description_domain.json"
    },
    "execution_domain": {
      "$ref": "execution_domain.json"
    },
    "parametric_domain": {
      "$ref": "#/definitions/inherited"
    },
    "io_domain": {
      "type": "object",
      "description": "TODO",
      "properties": {
        "input_subdomain": {
          "$ref": "#/definitions/inherited"
        },
        "output_subdomain": {
          "type": "array",
          "items": {
            "$comment": "TODO: extract as 'file' definition. Refer to the primitives.json. It was not extracted for lack of multiple reference to the type",
            "$comment": "https://github.com/biocompute-objects/BCO_Specification/blob/1935b9c2765a3d00e44e338ead5b637a5b20b648/base_type_BioCompute.json#L252-L256",
            "$comment": "https://github.com/biocompute-objects/BCO_Specification/blob/1935b9c2765a3d00e44e338ead5b637a5b20b648/primitives.json#L86-L94",
            "type": "object",
            "required": [
              "uri"
            ],
            "properties": {
              "uri": {
                "$ref": "#/definitions/uri"
              },
              "mediatype": {
                "$comment": "TODO: how are values validated?",
                "type": "string",
                "description": "https://www.iana.org/assignments/media-types/media-types.xhtml"
              }
            }
          }
        }
      }
    },
    "error_domain": {
      "type": "object",
      "properties": {
        "empirical_error": {
          "$ref": "#/definitions/inherited"
        },
        "algorithmic_error": {
          "$ref": "#/definitions/inherited"
        }
      }
    }
  }
}
